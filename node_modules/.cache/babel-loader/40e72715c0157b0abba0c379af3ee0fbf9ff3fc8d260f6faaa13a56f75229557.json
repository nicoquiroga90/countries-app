{"ast":null,"code":"var _jsxFileName = \"/Users/nico90/countries-app/src/componets/Main/Countries.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"../../styles/Countries.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Countries() {\n  _s();\n  const [countryList, setCountryList] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:4040/api/countries\");\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        const countries = await response.json();\n        setCountryList(countries);\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"containerList\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"country-grid\",\n      children: countryList.map(country => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: country.flags.svg,\n          alt: `Flag of ${country.name}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: country.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Population:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 16\n          }, this), \" \", country.population]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Region:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 16\n          }, this), \" \", country.region]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Capital:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 16\n          }, this), \" \", country.capital]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, country.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(Countries, \"2FlB3I35Yn2VKvtvBN8LZYcbwIM=\");\n_c = Countries;\nexport default Countries;\nvar _c;\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Countries","_s","countryList","setCountryList","fetchData","response","fetch","ok","Error","countries","json","error","console","className","children","map","country","src","flags","svg","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","population","region","capital","_c","$RefreshReg$"],"sources":["/Users/nico90/countries-app/src/componets/Main/Countries.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"../../styles/Countries.css\"\n\nfunction Countries() {\n  const [countryList, setCountryList] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:4040/api/countries\");\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        const countries = await response.json();\n        setCountryList(countries);\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"containerList\">\n      <div className=\"country-grid\">\n        {countryList.map((country) => (\n          <div className=\"card\" key={country.name}>\n            <img src={country.flags.svg} alt={`Flag of ${country.name}`} />\n            <h3>{country.name}</h3>\n            <p><strong>Population:</strong> {country.population}</p>\n            <p><strong>Region:</strong> {country.region}</p>\n            <p><strong>Capital:</strong> {country.capital}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Countries;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,4BAA4B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAElDD,SAAS,CAAC,MAAM;IACd,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,CAAC;QACnE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,MAAMC,SAAS,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QACvCP,cAAc,CAACM,SAAS,CAAC;MAC3B,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAChC;IACF,CAAC;IAEDP,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKc,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC5Bf,OAAA;MAAKc,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1BZ,WAAW,CAACa,GAAG,CAAEC,OAAO,iBACvBjB,OAAA;QAAKc,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnBf,OAAA;UAAKkB,GAAG,EAAED,OAAO,CAACE,KAAK,CAACC,GAAI;UAACC,GAAG,EAAG,WAAUJ,OAAO,CAACK,IAAK;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/D1B,OAAA;UAAAe,QAAA,EAAKE,OAAO,CAACK;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvB1B,OAAA;UAAAe,QAAA,gBAAGf,OAAA;YAAAe,QAAA,EAAQ;UAAW;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACT,OAAO,CAACU,UAAU;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxD1B,OAAA;UAAAe,QAAA,gBAAGf,OAAA;YAAAe,QAAA,EAAQ;UAAO;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACT,OAAO,CAACW,MAAM;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChD1B,OAAA;UAAAe,QAAA,gBAAGf,OAAA;YAAAe,QAAA,EAAQ;UAAQ;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACT,OAAO,CAACY,OAAO;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GALzBT,OAAO,CAACK,IAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMlC,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACxB,EAAA,CAnCQD,SAAS;AAAA6B,EAAA,GAAT7B,SAAS;AAqClB,eAAeA,SAAS;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}